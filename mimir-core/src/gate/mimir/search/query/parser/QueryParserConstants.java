/* Generated By:JavaCC: Do not edit this line. QueryParserConstants.java */
package gate.mimir.search.query.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface QueryParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int string = 17;
  /** RegularExpression Id. */
  int number = 18;
  /** RegularExpression Id. */
  int escape = 19;
  /** RegularExpression Id. */
  int special = 20;
  /** RegularExpression Id. */
  int le = 21;
  /** RegularExpression Id. */
  int ge = 22;
  /** RegularExpression Id. */
  int lt = 23;
  /** RegularExpression Id. */
  int gt = 24;
  /** RegularExpression Id. */
  int leftbrace = 25;
  /** RegularExpression Id. */
  int rightbrace = 26;
  /** RegularExpression Id. */
  int leftbracket = 27;
  /** RegularExpression Id. */
  int rightbracket = 28;
  /** RegularExpression Id. */
  int period = 29;
  /** RegularExpression Id. */
  int equals = 30;
  /** RegularExpression Id. */
  int colon = 31;
  /** RegularExpression Id. */
  int comma = 32;
  /** RegularExpression Id. */
  int or = 33;
  /** RegularExpression Id. */
  int and = 34;
  /** RegularExpression Id. */
  int plus = 35;
  /** RegularExpression Id. */
  int question = 36;
  /** RegularExpression Id. */
  int in = 37;
  /** RegularExpression Id. */
  int hyphen = 38;
  /** RegularExpression Id. */
  int over = 39;
  /** RegularExpression Id. */
  int leftsquarebracket = 40;
  /** RegularExpression Id. */
  int rightsquarebracket = 41;
  /** RegularExpression Id. */
  int regex = 42;
  /** RegularExpression Id. */
  int tok = 43;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_STRING = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
    "\" \"",
    "\"\\\"\"",
    "\"\\\\n\"",
    "\"\\\\r\"",
    "\"\\\\t\"",
    "\"\\\\b\"",
    "\"\\\\f\"",
    "\"\\\\\\\"\"",
    "\"\\\\\\\'\"",
    "\"\\\\\\\\\"",
    "<token of kind 15>",
    "<token of kind 16>",
    "\"\\\"\"",
    "<number>",
    "<escape>",
    "<special>",
    "\"<=\"",
    "\">=\"",
    "\"<\"",
    "\">\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\".\"",
    "\"=\"",
    "\":\"",
    "\",\"",
    "<or>",
    "<and>",
    "\"+\"",
    "\"?\"",
    "\"IN\"",
    "\"-\"",
    "\"OVER\"",
    "\"[\"",
    "\"]\"",
    "\"REGEX\"",
    "<tok>",
  };

}
